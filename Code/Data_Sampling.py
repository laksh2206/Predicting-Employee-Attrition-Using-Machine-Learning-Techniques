# Scikit-learn: Machine Learning in Python, Pedregosa et al., JMLR 12, pp. 2825-2830, 2011.
# http://scikit-learn.org/stable/about.html#citing-scikit-learn
# Some part of this code may have been generated by modifying code from scikit-learn documentation

import pandas as pd
import numpy as np
np.random.seed(10)
from sklearn.utils import shuffle
from sklearn.model_selection import train_test_split
from imblearn.over_sampling import SMOTE, ADASYN
import matplotlib.pyplot as plt
import warnings

warnings.filterwarnings(action="ignore")


rawData = pd.read_csv('/home/ldua/ML/Train.NoEmployeeNumber.csv', sep=",")
y = rawData['Attrition']
X = rawData.drop('Attrition', 1)

trainData = pd.read_csv('/home/ldua/ML/Train.NoEmployeeNumber.csv', sep=",")
y_train = trainData['Attrition']
X_train = trainData.drop('Attrition', 1)

testData = pd.read_csv('/home/ldua/ML/Test.NoEmployeeNumber.csv', sep=",")
y_test = testData['Attrition']
X_test = testData.drop('Attrition', 1)

X_resampled, y_resampled = SMOTE(ratio=1.0, random_state=42).fit_sample(X_train, y_train)

X_pandas = pd.DataFrame(X_resampled)
y_pandas = pd.DataFrame(y_resampled)

myData = [X_pandas, y_pandas]
dataResampled = pd.concat(myData, axis=1)

columnNames = list(rawData.columns)

dataResampled.columns = columnNames

dataResampled.to_csv('/home/ldua/ML/upsampledSMOTEnew.csv', sep=',', header=True, index=False, mode='w')

y = dataResampled['Attrition']
X = dataResampled.drop('Attrition', 1)

numAttrition = np.sum(y)
numNoAttrition = y.size - numAttrition

attritionVisual = [numAttrition, numNoAttrition]

plt.figure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')
plt.rcParams.update({'font.size': 14})
plt.xlabel('Attrition',  fontsize=14, color='red')
plt.ylabel('Attrition Count',  fontsize=14, color='red')
plt.bar(.7, numAttrition, .5, label='Yes')
plt.bar(0, numNoAttrition, .5, label='No')
plt.xticks([.7, 0], ('Yes', 'No'))
plt.legend(fontsize=14)
plt.xticks(fontsize=14, rotation=90)
plt.grid(True)
plt.show()
